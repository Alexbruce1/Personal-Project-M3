// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardContainer should render like the snapshot with data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    media={
      Array [
        Object {},
        Object {},
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card-container"
      >
        <Card />
        <Card />
      </div>,
      "className": "outer-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Card />,
          <Card />,
        ],
        "className": "card-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "class",
          "props": Object {
            "name": undefined,
            "teaser": undefined,
            "type": undefined,
            "wiki": undefined,
            "yId": undefined,
            "yt": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "class",
          "props": Object {
            "name": undefined,
            "teaser": undefined,
            "type": undefined,
            "wiki": undefined,
            "yId": undefined,
            "yt": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card-container"
        >
          <Card />
          <Card />
        </div>,
        "className": "outer-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Card />,
            <Card />,
          ],
          "className": "card-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "name": undefined,
              "teaser": undefined,
              "type": undefined,
              "wiki": undefined,
              "yId": undefined,
              "yt": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "class",
            "props": Object {
              "name": undefined,
              "teaser": undefined,
              "type": undefined,
              "wiki": undefined,
              "yId": undefined,
              "yt": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`CardContainer should render like the snapshot without data 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    media={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="card-container"
      >
        <div
          className="no-responses"
        >
          <h2>
            Sorry, there were no matches to your search
          </h2>
          <img
            alt=""
            src="dinosaur.png"
          />
          <h2>
            Try another search
          </h2>
        </div>
      </div>,
      "className": "outer-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="no-responses"
        >
          <h2>
            Sorry, there were no matches to your search
          </h2>
          <img
            alt=""
            src="dinosaur.png"
          />
          <h2>
            Try another search
          </h2>
        </div>,
        "className": "card-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              Sorry, there were no matches to your search
            </h2>,
            <img
              alt=""
              src="dinosaur.png"
            />,
            <h2>
              Try another search
            </h2>,
          ],
          "className": "no-responses",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Sorry, there were no matches to your search",
            },
            "ref": null,
            "rendered": "Sorry, there were no matches to your search",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "",
              "src": "dinosaur.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Try another search",
            },
            "ref": null,
            "rendered": "Try another search",
            "type": "h2",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="card-container"
        >
          <div
            className="no-responses"
          >
            <h2>
              Sorry, there were no matches to your search
            </h2>
            <img
              alt=""
              src="dinosaur.png"
            />
            <h2>
              Try another search
            </h2>
          </div>
        </div>,
        "className": "outer-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="no-responses"
          >
            <h2>
              Sorry, there were no matches to your search
            </h2>
            <img
              alt=""
              src="dinosaur.png"
            />
            <h2>
              Try another search
            </h2>
          </div>,
          "className": "card-container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h2>
                Sorry, there were no matches to your search
              </h2>,
              <img
                alt=""
                src="dinosaur.png"
              />,
              <h2>
                Try another search
              </h2>,
            ],
            "className": "no-responses",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Sorry, there were no matches to your search",
              },
              "ref": null,
              "rendered": "Sorry, there were no matches to your search",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "",
                "src": "dinosaur.png",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Try another search",
              },
              "ref": null,
              "rendered": "Try another search",
              "type": "h2",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
